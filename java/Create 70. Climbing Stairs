//recursion plus memo
class Solution {
    public int climbStairs(int n) {
        int[] arr = new int[n+1];
        int temp = helper(n,arr);
        return temp;
    }
    public int helper(int n,int[] arr){
        if(arr[n] != 0) return arr[n];
        if(n <= 1) return 1;
        arr[n-1] = helper(n-1,arr);
        arr[n-2] = helper(n-2,arr);
        arr[n] = arr[n-1] + arr[n-2];
        return arr[n];
    }
}
//dp
// class Solution {
//     public int climbStairs(int n) {
//         int[] dp = new int[n+1];
//         dp[0] = 1;
//         dp[1] = 1;
//         for(int i = 2; i < n+1; i++){
//             dp[i] = dp[i-2] + dp[i-1];
//         }
//         return dp[n];
//     }
// }
